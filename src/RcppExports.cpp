// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// MSFRVI_cpp
Rcpp::List MSFRVI_cpp(const Rcpp::List& YList, const Rcpp::List& ZList, const int& rank_use, const arma::vec& invLambda_int, const arma::mat& A_int, const Rcpp::List& BList_int, const arma::mat& bbeta_int, const Rcpp::List& MuList_f_int, const Rcpp::List& SList_f_int, const Rcpp::List& MuList_h_int, const Rcpp::List& SList_h_int, const int& ic, const double& epsELBO, const int& maxIter, const bool& verbose, const bool& loop_ic);
RcppExport SEXP _MultiCOAP_MSFRVI_cpp(SEXP YListSEXP, SEXP ZListSEXP, SEXP rank_useSEXP, SEXP invLambda_intSEXP, SEXP A_intSEXP, SEXP BList_intSEXP, SEXP bbeta_intSEXP, SEXP MuList_f_intSEXP, SEXP SList_f_intSEXP, SEXP MuList_h_intSEXP, SEXP SList_h_intSEXP, SEXP icSEXP, SEXP epsELBOSEXP, SEXP maxIterSEXP, SEXP verboseSEXP, SEXP loop_icSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List& >::type YList(YListSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type ZList(ZListSEXP);
    Rcpp::traits::input_parameter< const int& >::type rank_use(rank_useSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type invLambda_int(invLambda_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A_int(A_intSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type BList_int(BList_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type bbeta_int(bbeta_intSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type MuList_f_int(MuList_f_intSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type SList_f_int(SList_f_intSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type MuList_h_int(MuList_h_intSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type SList_h_int(SList_h_intSEXP);
    Rcpp::traits::input_parameter< const int& >::type ic(icSEXP);
    Rcpp::traits::input_parameter< const double& >::type epsELBO(epsELBOSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< const bool& >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< const bool& >::type loop_ic(loop_icSEXP);
    rcpp_result_gen = Rcpp::wrap(MSFRVI_cpp(YList, ZList, rank_use, invLambda_int, A_int, BList_int, bbeta_int, MuList_f_int, SList_f_int, MuList_h_int, SList_h_int, ic, epsELBO, maxIter, verbose, loop_ic));
    return rcpp_result_gen;
END_RCPP
}
// MuCOAP_cpp
Rcpp::List MuCOAP_cpp(const Rcpp::List& XcList, const Rcpp::List& aList, const Rcpp::List& ZList, const int& rank_use, const Rcpp::List& MuList_y_int, const Rcpp::List& SList_y_int, const arma::vec& invLambda_int, const arma::mat& A_int, const Rcpp::List& BList_int, const arma::mat& bbeta_int, const Rcpp::List& MuList_f_int, const Rcpp::List& SList_f_int, const Rcpp::List& MuList_h_int, const Rcpp::List& SList_h_int, const int& ic, const double& epsELBO, const int& maxIter, const bool& verbose, const bool& loop_ic);
RcppExport SEXP _MultiCOAP_MuCOAP_cpp(SEXP XcListSEXP, SEXP aListSEXP, SEXP ZListSEXP, SEXP rank_useSEXP, SEXP MuList_y_intSEXP, SEXP SList_y_intSEXP, SEXP invLambda_intSEXP, SEXP A_intSEXP, SEXP BList_intSEXP, SEXP bbeta_intSEXP, SEXP MuList_f_intSEXP, SEXP SList_f_intSEXP, SEXP MuList_h_intSEXP, SEXP SList_h_intSEXP, SEXP icSEXP, SEXP epsELBOSEXP, SEXP maxIterSEXP, SEXP verboseSEXP, SEXP loop_icSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List& >::type XcList(XcListSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type aList(aListSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type ZList(ZListSEXP);
    Rcpp::traits::input_parameter< const int& >::type rank_use(rank_useSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type MuList_y_int(MuList_y_intSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type SList_y_int(SList_y_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type invLambda_int(invLambda_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A_int(A_intSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type BList_int(BList_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type bbeta_int(bbeta_intSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type MuList_f_int(MuList_f_intSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type SList_f_int(SList_f_intSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type MuList_h_int(MuList_h_intSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type SList_h_int(SList_h_intSEXP);
    Rcpp::traits::input_parameter< const int& >::type ic(icSEXP);
    Rcpp::traits::input_parameter< const double& >::type epsELBO(epsELBOSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< const bool& >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< const bool& >::type loop_ic(loop_icSEXP);
    rcpp_result_gen = Rcpp::wrap(MuCOAP_cpp(XcList, aList, ZList, rank_use, MuList_y_int, SList_y_int, invLambda_int, A_int, BList_int, bbeta_int, MuList_f_int, SList_f_int, MuList_h_int, SList_h_int, ic, epsELBO, maxIter, verbose, loop_ic));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MultiCOAP_MSFRVI_cpp", (DL_FUNC) &_MultiCOAP_MSFRVI_cpp, 16},
    {"_MultiCOAP_MuCOAP_cpp", (DL_FUNC) &_MultiCOAP_MuCOAP_cpp, 19},
    {NULL, NULL, 0}
};

RcppExport void R_init_MultiCOAP(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
